[workspace]
resolver = "2"
members = [
  "bin/ev-reth",
  "crates/common",
  "crates/node",
  "crates/evolve",
  "crates/tests",
]

[workspace.package]
version = "0.1.0"
edition = "2021"
rust-version = "1.82"
license = "MIT OR Apache-2.0"
homepage = "https://github.com/evstack/ev-reth"
repository = "https://github.com/evstack/ev-reth"
authors = ["Evolve Stack Contributors"]

[workspace.dependencies]
# Reth dependencies - Using altius-reth fork
reth-chainspec = { path = "../altius-reth/crates/chainspec", default-features = false }
reth-cli = { path = "../altius-reth/crates/cli/cli" }
reth-cli-util = { path = "../altius-reth/crates/cli/util" }
reth-rpc-eth-api = { path = "../altius-reth/crates/rpc/rpc-eth-api" }
reth-node-api = { path = "../altius-reth/crates/node/api" }
reth-node-builder = { path = "../altius-reth/crates/node/builder" }
reth-errors = { path = "../altius-reth/crates/errors" }
reth-optimism-node = { path = "../altius-reth/crates/optimism/node" }
reth-optimism-cli = { path = "../altius-reth/crates/optimism/cli" }
reth-optimism-rpc = { path = "../altius-reth/crates/optimism/rpc" }
reth-optimism-forks = { path = "../altius-reth/crates/optimism/hardforks", default-features = false }
reth-optimism-chainspec = { path = "../altius-reth/crates/optimism/chainspec", default-features = false }
reth-optimism-payload-builder = { path = "../altius-reth/crates/optimism/payload" }
reth-optimism-primitives = { path = "../altius-reth/crates/optimism/primitives", default-features = false }
reth-trie-db = { path = "../altius-reth/crates/trie/db" }
reth-trie-common = { path = "../altius-reth/crates/trie/common", default-features = false }
reth-rpc-eth-types = { path = "../altius-reth/crates/rpc/rpc-eth-types", default-features = false }
reth-primitives-traits = { path = "../altius-reth/crates/primitives-traits", default-features = false }
reth-provider = { path = "../altius-reth/crates/storage/provider" }
reth-storage-api = { path = "../altius-reth/crates/storage/storage-api", default-features = false }
reth-tracing = { path = "../altius-reth/crates/tracing" }
reth-transaction-pool = { path = "../altius-reth/crates/transaction-pool" }
reth-network = { path = "../altius-reth/crates/net/network" }
reth-network-types = { path = "../altius-reth/crates/net/network-types" }
reth-chain-state = { path = "../altius-reth/crates/chain-state" }
reth-ethereum = { path = "../altius-reth/crates/ethereum/reth" }
reth-ethereum-cli = { path = "../altius-reth/crates/ethereum/cli" }
reth-basic-payload-builder = { path = "../altius-reth/crates/payload/basic" }
reth-engine-local = { path = "../altius-reth/crates/engine/local" }
reth-engine-primitives = { path = "../altius-reth/crates/engine/primitives", default-features = false }
reth-ethereum-payload-builder = { path = "../altius-reth/crates/ethereum/payload" }
reth-ethereum-primitives = { path = "../altius-reth/crates/ethereum/primitives", default-features = false }
reth-evm = { path = "../altius-reth/crates/evm/evm", default-features = false }
reth-evm-ethereum = { path = "../altius-reth/crates/ethereum/evm", default-features = false }
reth-execution-types = { path = "../altius-reth/crates/evm/execution-types", default-features = false }
reth-node-core = { path = "../altius-reth/crates/node/core" }
reth-node-types = { path = "../altius-reth/crates/node/types" }
reth-payload-builder = { path = "../altius-reth/crates/payload/builder" }
reth-payload-builder-primitives = { path = "../altius-reth/crates/payload/builder-primitives" }
reth-payload-primitives = { path = "../altius-reth/crates/payload/primitives" }
reth-primitives = { path = "../altius-reth/crates/primitives", default-features = false }
reth-revm = { path = "../altius-reth/crates/revm", default-features = false }
reth-rpc-api = { path = "../altius-reth/crates/rpc/rpc-api" }
reth-rpc-builder = { path = "../altius-reth/crates/rpc/rpc-builder" }
reth-rpc-engine-api = { path = "../altius-reth/crates/rpc/rpc-engine-api" }


# Consensus dependencies
reth-consensus = { path = "../altius-reth/crates/consensus/consensus", default-features = false }
reth-consensus-common = { path = "../altius-reth/crates/consensus/common", default-features = false }
reth-ethereum-consensus = { path = "../altius-reth/crates/ethereum/consensus", default-features = false }

# Test dependencies
reth-testing-utils = { path = "../altius-reth/testing/testing-utils" }
reth-db = { path = "../altius-reth/crates/storage/db", default-features = false }
reth-tasks = { path = "../altius-reth/crates/tasks" }

# Alloy dependencies
alloy = { version = "1.0.23", features = [
  "contract",
  "providers",
  "provider-http",
  "signers",
  "reqwest-rustls-tls",
], default-features = false }
alloy-eips = { version = "1.0.23", default-features = false }
alloy-network = { version = "1.0.23", default-features = false }
alloy-provider = { version = "1.0.23", default-features = false }
alloy-rpc-client = { version = "1.0.23", default-features = false }
alloy-rpc-types = { version = "1.0.23", default-features = false }
alloy-json-rpc = { version = "1.0.23", default-features = false }
alloy-rpc-types-eth = { version = "1.0.23", default-features = false }
alloy-rpc-types-engine = { version = "1.0.23", default-features = false }
alloy-signer-local = { version = "1.0.23", features = ["mnemonic"] }
alloy-primitives = { version = "1.2.0", default-features = false }
alloy-consensus = { version = "1.0.23", default-features = false }
alloy-genesis = { version = "1.0.23", default-features = false }
alloy-rpc-types-txpool = { version = "1.0.23", default-features = false }

# Core dependencies
eyre = "0.6"
tracing = "0.1"
tokio = { version = "1.38", features = ["full"] }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
thiserror = "2.0"
async-trait = "0.1"
futures = "0.3"
clap = { version = "4.5", features = ["derive", "env"] }


jsonrpsee = "0.25.1"
jsonrpsee-core = "0.25.1"
jsonrpsee-server = "0.25.1"
jsonrpsee-http-client = "0.25.1"
jsonrpsee-types = "0.25.1"
jsonrpsee-proc-macros = "0.25.1"
# Additional dependencies
reqwest = { version = "0.11", features = ["json"] }
chrono = { version = "0.4", features = ["serde"] }
rand = "0.8"
tempfile = "3.10"
hex = "0.4"

[workspace.lints]
rust.missing_debug_implementations = "warn"
rust.missing_docs = "warn"
rust.rust_2018_idioms = { level = "deny", priority = -1 }
rust.unreachable_pub = "warn"
rust.unused_must_use = "deny"
rustdoc.all = "warn"
rust.unnameable-types = "warn"

[workspace.lints.clippy]
# These are some of clippy's nursery (i.e., experimental) lints that we like.
# By default, nursery lints are allowed. Some of the lints below have made good
# suggestions which we fixed. The others didn't have any findings, so we can
# assume they don't have that many false positives. Let's enable them to
# prevent future problems.
borrow_as_ptr = "warn"
branches_sharing_code = "warn"
clear_with_drain = "warn"
cloned_instead_of_copied = "warn"
collection_is_never_read = "warn"
derive_partial_eq_without_eq = "warn"
doc_markdown = "warn"
empty_line_after_doc_comments = "warn"
empty_line_after_outer_attr = "warn"
enum_glob_use = "warn"
equatable_if_let = "warn"
explicit_into_iter_loop = "warn"
explicit_iter_loop = "warn"
flat_map_option = "warn"
from_iter_instead_of_collect = "warn"
if_not_else = "warn"
implicit_clone = "warn"
imprecise_flops = "warn"
iter_on_empty_collections = "warn"
iter_on_single_items = "warn"
iter_with_drain = "warn"
iter_without_into_iter = "warn"
large_stack_frames = "warn"
manual_assert = "warn"
manual_clamp = "warn"
manual_is_variant_and = "warn"
manual_string_new = "warn"
match_same_arms = "warn"
missing_const_for_fn = "warn"
mutex_integer = "warn"
naive_bytecount = "warn"
needless_bitwise_bool = "warn"
needless_continue = "warn"
needless_for_each = "warn"
needless_pass_by_ref_mut = "warn"
nonstandard_macro_braces = "warn"
option_as_ref_cloned = "warn"
or_fun_call = "warn"
path_buf_push_overwrite = "warn"
read_zero_byte_vec = "warn"
redundant_clone = "warn"
redundant_else = "warn"
single_char_pattern = "warn"
string_lit_as_bytes = "warn"
string_lit_chars_any = "warn"
suboptimal_flops = "warn"
suspicious_operation_groupings = "warn"
trailing_empty_array = "warn"
trait_duplication_in_bounds = "warn"
transmute_undefined_repr = "warn"
trivial_regex = "warn"
tuple_array_conversions = "warn"
type_repetition_in_bounds = "warn"
uninhabited_references = "warn"
unnecessary_self_imports = "warn"
unnecessary_struct_initialization = "warn"
unnested_or_patterns = "warn"
unused_peekable = "warn"
unused_rounding = "warn"
use_self = "warn"
useless_let_if_seq = "warn"
while_float = "warn"
zero_sized_map_values = "warn"

# These are nursery lints which have findings. Allow them for now. Some are not
# quite mature enough for use in our codebase and some we don't really want.
# Explicitly listing should make it easier to fix in the future.
as_ptr_cast_mut = "allow"
cognitive_complexity = "allow"
debug_assert_with_mut_call = "allow"
fallible_impl_from = "allow"
future_not_send = "allow"
needless_collect = "allow"
non_send_fields_in_send_ty = "allow"
redundant_pub_crate = "allow"
significant_drop_in_scrutinee = "allow"
significant_drop_tightening = "allow"
too_long_first_doc_paragraph = "allow"

[profile.release]
opt-level = 3
lto = "thin"
strip = "debuginfo"
codegen-units = 1

# Memory-optimized release profile
[profile.docker]
inherits = "release"
opt-level = 2
lto = false
codegen-units = 1
incremental = false

# Maximum performance profile
[profile.maxperf]
inherits = "release"
opt-level = 3
lto = "fat"
codegen-units = 1
incremental = false
debug = false
